name: Build and Deploy Code

#runner: github-hosted runner, a runner is a machine that runs your code

#jobs: jobs are the tasks that are executed in the runner

#steps: steps are the commands that are executed in the runner

#runs-on: the machine that runs the code, can be ubuntu-latest, windows-latest, 
#macos-latest, or all of them, right now we are using ubuntu-latest as our production environment is ubuntu


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    environment: testing
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      # POSTGRES_HOST: postgres
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SQLALCHEMY_DATABASE_URL: ${{ secrets.SQLALCHEMY_DATABASE_URL }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}-test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v4
      - name: install python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: run tests
        run: |
          pip install pytest
          pip install requests
          pytest

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image
        id: build_build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER }}/fastapi-app:latest
          cache-from: type=local,src=./tmp/.buildx-cache
          cache-to: type=local,dest=./tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.build_build.outputs.digest }}

  deploy:
    name: Deploy
    environment: production
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy docker image
        run: echo ${{ steps.build_build.outputs.digest }}

      - name: remote ssh command
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
              cd fastapi-app/src
              git pull
              echo ${{ secrets.PROD_PASSWORD }} | sudo -S systemctl restart fastapi

    
      

       